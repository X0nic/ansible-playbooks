##
# Ansible playbook for setting up a LAMP development server on Ubuntu 12.04.
#

---
- hosts: pullfolio
  user: root
  server_hostname: 'pullfolio.com'

  vars_files:
    - vars/settings.yml
    - vars/private-settings.yml

  tasks:
    - name: Update APT package cache
      action: apt update_cache=yes
      tags: common

    - name: Run apt-get upgrade
      action: apt upgrade=dist
      tags: common

    - name: Install fail2ban
      action: apt pkg=fail2ban state=installed
      tags: common

    - name: zsh
      action: apt pkg=zsh state=installed
      tags: common

    - name: Add ayn user
      action: user name=ayn password=$ayn_password shell=/usr/bin/zsh
      tags: common

    - name: Add ray user
      action: user name=ray password=$ayn_password shell=/usr/bin/zsh
      tags: common

    - name: Add authorized key for ayn
      action: authorized_key user=ayn key='$FILE(files/ayn.pub)'
      tags: common

    - name: Add authorized key for ray
      action: authorized_key user=ayn key='$FILE(files/ray.pub)'
      tags: common

    - name: Remove sudo group rights
      action: lineinfile dest=/etc/sudoers regexp="^%sudo" state=absent
      tags: common

    - name: Add ayn user to sudoers
      action: lineinfile dest=/etc/sudoers regexp="ayn ALL" line="ayn ALL=(ALL) ALL" state=present
      tags: common

    - name: Add ray user to sudoers
      action: lineinfile dest=/etc/sudoers regexp="ray ALL" line="ayn ALL=(ALL) ALL" state=present
      tags: common

    - name: Disallow root SSH access
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      tags: common
      notify: Restart sshd

    - name: Disallow password authentication
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      tags: common
      notify: Restart sshd

    - name: Install unattended-upgrades
      action: apt pkg=unattended-upgrades state=present
      tags: common

    - name: Adjust APT update intervals
      action: copy src=files/apt_periodic dest=/etc/apt/apt.conf.d/10periodic
      tags: common

    - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
      action: lineinfile dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent
      tags: common

    - name: Copy debconf selections so that Postfix can configure itself non-interactively
      copy: src=files/postfix_selections  dest=/tmp/postfix_selections
      tags: common

    - name: Set up Postfix to relay mail
      action: command debconf-set-selections /tmp/postfix_selections
      tags: common

    - name: Install logwatch
      action: apt pkg=logwatch state=installed
      tags: common

    - name: Make logwatch mail $logwatch_email daily
      action: lineinfile dest=/etc/cron.daily/00logwatch regexp="^/usr/sbin/logwatch" line="/usr/sbin/logwatch --output mail --mailto $logwatch_email --detail high" state=present create=yes
      tags: common

    ##
    # Apt package installation of required software.
    #
    - name: General | Install required packages.
      action: apt pkg=$item state=installed
      tags: ayn
      with_items:
        - nginx
        - mysql-server
        - mysql-client
        - unzip
        - git
        - screen
        - memcached
        - strace
        - atsar
        - uptimed

    - name: my dotfiles, will have to rake install later
      git: repo=git://github.com/ayn/dotfiles.git dest=~ayn/.dotfiles

    - name: chown dotfiles
      file: path=~ayn/.dotfiles recurse=yes owner=ayn group=ayn state=directory

    ##
    # ruby
    #
    - name: rvm
      action: shell curl -L https://get.rvm.io | bash -s stable
      tags: ruby

    ##
    # Message of the day explaining server is under control of Ansible.
    #
    - name: General | Message of the day explaining server is under Ansible control.
      action: copy src=files/etc-update-motd-d-95-ansible dest=/etc/update-motd.d/95-ansible mode=755
      tags: common

    ##
    # MySQL database setup.
    #
    - name: MySQL | Configuration file, my.cnf
      action: template src=templates/etc-mysql-my-cnf.j2 dest=/etc/mysql/my.cnf
      tags: common

    - include: common-tasks/mysql-secure.yml

    - name: Restart MySQL
      action: service name=mysql state=restarted
      tags: common

  ##
  # Restart services
  #
  handlers:
    - name: Restart sshd
      action: service name=sshd state=restarted
      tags: common

